#class prompt open;

#nop { Begin updating prompt when this message is sent by msdp class. };

#act {Loading ARTT scripts...} {

    #event {RECEIVED PROMPT} {

        #var custom_prompt {%%0};

        #show UPDATE_PROMPT;

        #if { "$gag_prompt" == "1" } {

            #line gag;

            };

        };

    #event {VARIABLE UPDATE MSDP_WORLD_TIME} {

        #show UPDATE_PROMPT;

        };

    };

#act {UPDATE_PROMPT} {

    #if { "$prompt" == "custom" && "$time_loaded" == "1" } {

        #showme {$custom_prompt} {1};

        };

    #elseif { "$prompt" == "msdp" && "$time_loaded" == "1" } {

        #math {my[hp_percent]} {100 * $my[hp] / $my[hp_max]};

        #math {my[mp_percent]} {100 * $my[mp] / $my[mp_max]};

        #nop { Set burden variable to 0 };

		#if { "$my[wt]" <= "$my[wt_max]" && "$burden" != "0" } {

			#var burden 0;

			};

        #nop { Set burden variable to 1 };

		#if { "$my[wt]" > "$my[wt_max]" && "$burden" != "1" } {

			#var burden 1;

			};

        #nop { If character is burdened by weight, colorize move points };

		#if { "$burden" != "1" } {

        	#math {my[mv_percent]} {100 * $my[mv] / $my[mv_max]};

			} {

			#math {my[mv_percent]} {100 * $my[mv] / $my[mv_max]};

			#var {my[mv_percent]} {<038>$my[mv_percent]<088>};

			};

        #var self {$my[hp_percent]\%hp $my[mp_percent]\%m $my[mv_percent]\%mv};

        #var my_stance {$my[weapon_type] $my[combat_style]};

        #nop { If no opponent, remove opponent info from prompt. };

        #if { "$opo[name]" == "None\." } {

            #var opponent {};

            #var vs_symbol {<};

            } {

            #nop { If fighting show opponent hp percent in prompt. };

            #var opponent { $opo[name]: $opo[hp_percent]\%hp };

            #nop { Set left brackets color/direction to show the greater hp. };

            #if { $my[hp_percent] < $opo[hp_percent] } {

                #var vs_symbol {<018>><088>};

                };

            #elseif { $my[hp_percent] > $opo[hp_percent] } {

                #var vs_symbol {<028><<088>};

                };

            };

        #showme {$opponent$vs_symbol $self $my_stance $tick} {1};

        };

    #elseif { "$prompt" == "pretty" && "$time_loaded" == "1" } {

        #var ps1 {};

        #format {ps1} {$ps1\Hp: @scale2{$my[hp];$my[hp_max]} };

        #format {ps1} {$ps1\M: @scale2{$my[mp];$my[mp_max]} };

        #format {ps1} {$ps1\Mv: @scale2{$my[mv];$my[mv_max]} };

        #var my_stance {$my[weapon_type] $my[combat_style]};

        #show {$ps1$tick $my_stance} {1};

        };

    #elseif { "$prompt" == "scale" && "$time_loaded" == "1" } {

        #var ps1 {};

        #format {ps1} {$ps1$my[hp]<178>\xe2\x96\x95<018>@scale{$my[hp];$my[hp_max];12}<178>\xe2\x96\x8e<088>};

        #format {ps1} {$ps1$my[mp]<178>\xe2\x96\x95<048>@scale{$my[mp];$my[mp_max];12}<178>\xe2\x96\x8e<088>};

        #format {ps1} {$ps1$my[mv]<178>\xe2\x96\x95<038>@scale{$my[mv];$my[mv_max];12}<178>\xe2\x96\x8e<088>};

        #var my_stance {$my[weapon_type] $my[combat_style]};

        #show { $tick <178>\xe2\x96\x8e<088>$ps1$my_stance} {1};

        };

    #line gag;

    };

#nop { Use AR exits to trigger show msdp_map. };

#act {~^[Exits: %1]$} {

    #var exits {%1};

    #nop { If msdp-map info has been received, show map. };

    #if { "$msdp_automap" == "1" && "$msdp_active" == "1" } {
        #show {$map[1]};
        #show {$map[2]};
        #show {$map[3]};
        #show {$map[4]};
        #show {$map[5]};
        #show {$map[6]};
        #show {$map[7]    $MSDP_ROOM_NAME};
        #show {$map[8]};
        #show {$map[9]    \[Exits: $exits\]};
        #show { };
        };

    #nop { Elseif msdp-map info has not loaded. };

    #elseif { "$msdp_automap" == "1" && "$msdp_active" != "1" } {

        #show {<cfa>Please wait while MSDP loads...<088>};

        };

    #if { "$gag_exits" == "1" } {#line gag};

    };

#nop { Toggle automap off if variable 'msdp_automap' is on. };

#act {%?%?%?%?@%?%?%?%?|} {

    #if { "$msdp_automap" == "1" } {

        automap;

        #act {You no longer display map in room desc.} {

            #showme {<cfa>AR automap disabled (\{msdp_automap\}=\{1\})<088>};

            #line gag;

            };

        };

    };

#nop { For pretty prompt };

#unvar SCALE10;
#var SCALE10[0]  {----------};
#var SCALE10[1]  {<fbb>o<088>---------};
#var SCALE10[2]  {<fbb>o<fcb>o<088>--------};
#var SCALE10[3]  {<fbb>o<fcb>o<fdb>o<088>-------};
#var SCALE10[4]  {<fbb>o<fcb>o<fdb>o<feb>o<088>------};
#var SCALE10[5]  {<fbb>o<fcb>o<fdb>o<feb>o<ffb>o<088>-----};
#var SCALE10[6]  {<fbb>o<fcb>o<fdb>o<feb>o<ffb>o<efb>o<088>----};
#var SCALE10[7]  {<fbb>o<fcb>o<fdb>o<feb>o<ffb>o<efb>o<dfb>o<088>---};
#var SCALE10[8]  {<fbb>o<fcb>o<fdb>o<feb>o<ffb>o<efb>o<dfb>o<cfb>o<088>--};
#var SCALE10[9]  {<fbb>o<fcb>o<fdb>o<feb>o<ffb>o<efb>o<dfb>o<cfb>o<bfb>o<088>-};
#var SCALE10[10] {<fbb>o<fcb>o<fdb>o<feb>o<ffb>o<efb>o<dfb>o<cfb>o<bfb>o<afb>o<088>};

#function {scale2} {
  #var scale1 {%1};
  #var scale2 {%2};
  #math scale3 {((%1*100)/%2+5)/10};
  #if {$scale3>10} {#var scale3 10}; 
  #if {$scale3<0}  {#var scale3 0}; 
  #var result $SCALE10[$scale3];
}; 

#nop { For scale prompt }

#unvar SCALE8
#format SCALE8[0] { };
#format SCALE8[1] {\xE2\x96\x8F};
#format SCALE8[2] {\xE2\x96\x8E};
#format SCALE8[3] {\xE2\x96\x8D};
#format SCALE8[4] {\xE2\x96\x8C};
#format SCALE8[5] {\xE2\x96\x8B};
#format SCALE8[6] {\xE2\x96\x8A};
#format SCALE8[7] {\xE2\x96\x89};
#format SCALE8[8] {\xE2\x96\x88};

#function {scale} {
  #var scale1 {%1};          #nop scale value  ; 
  #var scale2 {%2};          #nop scale max value  ;
  #var scaleC {%3};          #nop number of characters in scale ; 
  #math scaleM {$scaleC*8};  #nop scale0 = number of characters in scale ; 
  #math scale3 {(%1*$scaleM)/%2};
  #if {$scale3>$scaleM} {#var scale3 $scaleM}; 
  #if {$scale3<0}       {#var scale3 0}; 
  #var result {} ;
  #loop 1 $scaleC loop {
    #if {$scale3>=8} {
      #var scale4 8;
    }{
      #var scale4 $scale3;
    }
    #math scale3 {$scale3-$scale4};
    #format result {%s%s} {$result} {$SCALE8[$scale4]};
  }
};
 
#class prompt close;
